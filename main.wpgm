import wollok.game.*
import objects.*

program FulbotGame {
    game.title("Fulbot")
    game.boardGround("pitchHorizontal.jpg")
    game.height(100) // tenemos un alto de 100 celdas (1000 pixeles).
    game.width(225) // tenemos un ancho de 225 celdas (2250 pixeles).
    game.cellSize(10) // tenemos celdas de 10x10 pixeles.

// SONIDO DE FONDO
    const sonidoAmbiente = game.sound("sonidoAmbiente.mp3")
    sonidoAmbiente.shouldLoop(true)
    sonidoAmbiente.play()
    
    var sonidoAmbienteIsOn = true
    keyboard.m().onPressDo({
        if (sonidoAmbienteIsOn) {
            sonidoAmbiente.volume(0)
            sonidoAmbienteIsOn = false
        } else {
            sonidoAmbiente.volume(100)
            sonidoAmbienteIsOn = true
        }
    })

// TECLAS DE ACCIÓN
    keyboard.w().onPressDo({ jugador1.moverseArriba(5) })
    keyboard.a().onPressDo({ jugador1.moverseIzquierda(5) })
    keyboard.s().onPressDo({ jugador1.moverseAbajo(5) })
    keyboard.d().onPressDo({ jugador1.moverseDerecha(5) })
    keyboard.space().onPressDo({ jugador1.patearPelota(pelota) })

    keyboard.up().onPressDo({ jugador2.moverseArriba(5) })
    keyboard.left().onPressDo({ jugador2.moverseIzquierda(5) })
    keyboard.down().onPressDo({ jugador2.moverseAbajo(5) })
    keyboard.right().onPressDo({ jugador2.moverseDerecha(5) })
    keyboard.enter().onPressDo({ jugador2.patearPelota(pelota) })

// OBJETOS Y REFERENCIAS
    // Coordenadas esquinas
    const xBordeIzq = 11
    const xBordeDer = 209
    const yBordeInf = 1
    const yBordeSup = 97

    // Corner flags
    const bandera1 = new Item (image = "cornerFlag.png", position = game.at(xBordeIzq, yBordeInf))
    const bandera2 = new Item (image = "cornerFlag.png", position = game.at(xBordeIzq, yBordeSup))
    const bandera3 = new Item (image = "cornerFlag.png", position = game.at(xBordeDer, yBordeInf))
    const bandera4 = new Item (image = "cornerFlag.png", position = game.at(xBordeDer, yBordeSup))

    // Coordenadas arcos
    const xLineaArco1 = 10
    const xLineaArco2 = 208
    const yInfAmbosArcos = 42
    const ySupAmbosArcos = 56

    // Coordenadas jugadores
    const xiJugador1 = 97
    const xiJugador2 = 120
    const yiAmbosJugadores = 50

    // Jugadores
    const jugador1 = new Jugador (image = "argentino.png", position = new MutablePosition(x=xiJugador1, y=yiAmbosJugadores))
    const jugador2 = new Jugador (image = "brasilero.png", position = new MutablePosition(x=xiJugador2, y=yiAmbosJugadores))

    // Consumibles y Tarjetas
	const agua1 = new Agua() const agua2 = new Agua() const agua3 = new Agua() const agua4 = new Agua()
    const gaseosa1 = new Gaseosa() const gaseosa2 = new Gaseosa()
    const comida = new Comida()
    const banana1 = new Banana() const banana2 = new Banana()
    const bananaPeel1 = new BananaPeelDer() const bananaPeel2 = new BananaPeelIzq()
    const amarilla1 = new TarjetaAmarilla() const amarilla2 = new TarjetaAmarilla()
    const roja = new TarjetaRoja()

    const consumibles = [agua1, agua2, agua3, agua4, gaseosa1, gaseosa2, comida, banana1, banana2, bananaPeel1, bananaPeel2]
    const tarjetas = [amarilla1, amarilla2, roja]

    // Otros
    const pelota = new Item (image = "pelota.png", position = game.at(110, 50))
    var golesJugador1 = 0
    var golesJugador2 = 0

 // VISUALS
    game.addVisual(jugador1) game.addVisual(jugador2)
    game.addVisual(pelota)
    game.addVisual(bandera1) game.addVisual(bandera2) game.addVisual(bandera3) game.addVisual(bandera4)
    game.addVisual(agua1) game.addVisual(agua2) game.addVisual(agua3) game.addVisual(agua4)
    game.addVisual(gaseosa1) game.addVisual(gaseosa2)
    game.addVisual(comida)
    game.addVisual(banana1) game.addVisual(banana2)
    game.addVisual(bananaPeel1) game.addVisual(bananaPeel2)
    game.addVisual(amarilla1) game.addVisual(amarilla2)
    game.addVisual(roja)
    game.say(jugador1, "Muchaaaaachoooooos") 
    game.say(jugador2, "Eu nao falo portugues...")

// EVENTOS DE INICIO
    game.schedule (1000, { agua1.moverseAlAzar() agua2.moverseAlAzar() })
    game.schedule (2000, { agua3.moverseAlAzar() agua4.moverseAlAzar() })
    game.schedule (3000, { banana1.moverseAlAzar() bananaPeel1.moverseAlAzar() })
    game.schedule (4000, { gaseosa1.moverseAlAzar() gaseosa2.moverseAlAzar()})
    game.schedule (6000, { banana2.moverseAlAzar() bananaPeel2.moverseAlAzar() })
    game.schedule (8000, { comida.moverseAlAzar() })
    game.schedule (10000, { amarilla1.moverseAlAzar() amarilla2.moverseAlAzar() })
    game.schedule (20000, { roja.moverseAlAzar() })

// EVENTOS AUTOMATICOS
    game.onTick (1000, "jugador1 recupera energia", { jugador1.ganarEnergia(10) })
    game.onTick (1000, "jugador2 recupera energia", { jugador2.ganarEnergia(10) })
    game.onTick (100, "chequeo de colisiones", {
        [jugador1, jugador2].forEach({ jugador =>
            jugador.agarrarConsumible (consumibles)
            jugador.llevarPelota (pelota)
        })
        jugador1.agarrarTarjeta (tarjetas, jugador2)
        jugador2.agarrarTarjeta (tarjetas, jugador1)
    })
    /*
    if (pelota.position().x() >= arco1X && pelota.position().x() <= (arco1X + arco1Ancho) &&
        pelota.position().y() >= arco1Y && pelota.position().y() <= (arco1Y + arco1Alto)) {
        golesJugador2 += 1
        game.say(jugador2, "¡Gol para el Jugador 2! Total: " + golesJugador2)
        // Reiniciamos posiciones
        pelota.moverse(110, 50)
        jugador1.moverse(xiJugador1, yiAmbosJugadores)
        jugador2.moverse(xiJugador2, yiAmbosJugadores)
    }
    if (pelota.position().x() >= arco2X && pelota.position().x() <= (arco2X + arco2Ancho) &&
        pelota.position().y() >= arco2Y && pelota.position().y() <= (arco2Y + arco2Alto)) {
        golesJugador1 += 1
        game.say(jugador1, "¡Gol para el Jugador 1! Total: " + golesJugador1)
        // Reiniciamos posiciones
        pelota.moverse(110, 50)
        jugador1.moverse(xiJugador1, yiAmbosJugadores)
        jugador2.moverse(xiJugador2, yiAmbosJugadores)
    }
    */
    game.start()
}
